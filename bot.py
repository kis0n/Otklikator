import asyncio
import logging

from glob import glob
from aiogram import Bot
from aiogram import F
from aiogram import Dispatcher
from aiogram import types
from aiogram.methods import SendAudio
from aiogram.types import Message
from aiogram.types import (
	ReplyKeyboardMarkup,
	KeyboardButton,
	InlineKeyboardMarkup,
	InlineKeyboardButton
	)


BOT_TOKEN = "6503877334:AAFIzBBB2vs6uGc0XWOcrCy4zw2XiOvN5gE"

bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()
otkl = 0
otkaz = 0
test = 0
sobes = 0
audio_file_id = 'CQACAgIAAxkBAAEX8IZlinGlrhwDaN35lX7ZCS-jIpucbgACTzkAAru0WEh6V6ctd9-2azME'
# @dp.message(F.text == "/start") #—Ä–µ–∞–≥–∏—Ä—É–µ—Ç –Ω–∞ /start –∏ –æ—Ç–≤–µ—á–∞–µ—Ç
# async def start(message: Message):
				# await message.answer(f"–ü—Ä–∏–≤–µ—Ç, <b>{message.from_user.first_name} </b>", reply_markup=main_kb) # –≤–æ—Ç —ç—Ç–æ



main_kb = ReplyKeyboardMarkup(
	keyboard=[
		[
			KeyboardButton(text="‚ûï –û—Ç–∫–ª–∏–∫"),
			KeyboardButton(text="‚ùå –û—Ç–∫–∞–∑"),
			KeyboardButton(text="üõ† –¢–µ—Å—Ç–æ–≤–æ–µ")
		],
		[
			KeyboardButton(text="‚öîÔ∏è –°–æ–±–µ—Å"),
			KeyboardButton(text="üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")
		],
		[
			KeyboardButton(text="üéâ –û–§–§–ï–†!!! üéâ"),
		]
	],
	resize_keyboard=True,
	# one_time_keyboard=True, #—Å–∫—Ä—ã–≤–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –ø–æ—Å–ª–µ –ø–µ—Ä–≤–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
	input_field_placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é",
	selective=True
	)


@dp.message(F.text == "–û–±–Ω—É–ª–∏—Ç—å")
async def obnul(message: Message):
	global otkl
	otkl = 0
	global otkaz
	otkaz = 0
	global test
	test = 0
	global sobes
	sobes = 0
	audio_file_id = 'CQACAgIAAxkBAAEX8IZlinGlrhwDaN35lX7ZCS-jIpucbgACTzkAAru0WEh6V6ctd9-2azME'
	# print(otkl, otkaz, test, sobes)
	await message.answer(text= "–í—Å—ë –æ–±–Ω—É–ª–∏–ª! ü§ô")

@dp.message(F.text == "–æ–±–Ω—É–ª–∏—Ç—å")
async def obnul(message: Message):
	global otkl
	otkl = 0
	global otkaz
	otkaz = 0
	global test
	test = 0
	global sobes
	sobes = 0
	audio_file_id = 'CQACAgIAAxkBAAEX8IZlinGlrhwDaN35lX7ZCS-jIpucbgACTzkAAru0WEh6V6ctd9-2azME'
	# print(otkl, otkaz, test, sobes)
	await message.answer(text= "–í—Å—ë –æ–±–Ω—É–ª–∏–ª! ü§ô")


@dp.message()
async def echo_message(message: types.Message):
	#await message.answer(text= "–ø–æ–≥–æ–¥–∏-–∫–∞")        #—Ñ—É–Ω–∫—Ü–∏—è —à–ª–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ—Å–ª–µ –ª—é–±–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç–µ


	if message.text.startswith("‚ûï"):
		global otkl
		otkl += 1
		print(otkl)
		await message.answer(text= "–û—Ç–ª–∏—á–Ω–æ! –ß–µ–º –±–æ–ª—å—à–µ –æ—Ç–∫–ª–∏–∫–æ–≤, —Ç–µ–º –±–æ–ª—å—à–µ —à–∞–Ω—Å–æ–≤ –Ω–∞–π—Ç–∏ —Ä–∞–±–æ—Ç—É!üôÇ" )
	

		# await message.reply(text="–∫–∞–π—Ñ—É–µ–º!").  #—Ñ—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è —à–ª–µ—Ç –æ—Ç–≤–µ—Ç –Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–æ–¥–ø–∏—Å—å—é
	elif message.text.startswith("‚ùå"):
		if otkl > 0:
			global otkaz
			otkaz += 1
			await message.answer(text= "–¢–∞–∞–∞–∫, –æ—Ç–∫–∞–∑. –ù—É –Ω–∏—á–µ–≥–æ —Å—Ç—Ä–∞—à–Ω–æ–≥–æ! \n –ë–µ–∑ –Ω–∏—Ö –Ω–∏–∫–∞–∫, –æ—Å–æ–±–µ–Ω–Ω–æ –≤ –Ω–∞—á–∞–ª–µ! üôÇ")
		else:
		 await message.answer(text= "–ö–∞–∫–æ–π –æ—Ç–∫–∞–∑, –µ—Å–ª–∏ –µ—â–µ –æ—Ç–∫–ª–∏–∫–æ–≤ –Ω–µ –±—ã–ª–æ? üôÇ")
		
		

	elif message.text.startswith("üõ†"):
		if otkl > 0:
			global test
			test += 1
			await message.answer(text= "–û, —Ç–µ—Å—Ç–æ–≤–æ–µ –∑–∞–¥–∞–Ω–∏–µ! –î–∞–≤–∞–π-–¥–∞–≤–∞–π, —Ä–∞—Å–ø–∏—à–∏ –≤—Å—ë —á–µ—Ç–∫–æ –∏ –Ω–µ –∑–∞—Ç—è–≥–∏–≤–∞–π —Å–æ —Å–¥–∞—á–µ–π!")
		else:
		 await message.answer(text= "–ö–∞–∫–æ–µ —Ç–µ—Å—Ç–æ–≤–æ–µ, –µ—Å–ª–∏ –µ—â–µ –æ—Ç–∫–ª–∏–∫–æ–≤ –Ω–µ—Ç? üôÇ")



	elif message.text.startswith("‚öîÔ∏è"):
		if otkl > 0:
			global sobes
			sobes += 1
			await message.answer(text= "–£–§, —Å–æ–±–µ—Å... –ü–æ–¥–≥–æ—Ç–æ–≤—å—Å—è –ø–æ–ª—É—á—à–µ! –ë—É–¥—É –¥–µ—Ä–∂–∞—Ç—å –∑–∞ —Ç–µ–±—è –∫—É–ª–∞—á–∫–∏!üëä")
		else:
		 await message.answer(text= "–ù–∞ —Å–æ–±–µ—Å –±–µ–∑ –æ—Ç–∫–ª–∏–∫–æ–≤? –ù–µ –≤–µ—Ä—é üôÇ")


	elif message.text.startswith("üìà"):
		if otkl > otkaz and sobes > 0:
			global stat
			global ignor
			ignor = otkl - otkaz
			stat = 100 / otkl * sobes

			await message.answer(f'–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç–∫–ª–∏–∫–æ–≤ {str(otkl)} \n' \
			f'–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç–∫–∞–∑–æ–≤ {str(otkaz)} \n'
			f'–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–≥–Ω–æ—Ä–æ–≤ {str(ignor)} \n'
			f'–ü–µ—Ä–µ—Ö–æ–¥—ã –∏–∑ –æ—Ç–∫–ª–∏–∫–æ–≤ –≤ —Å–æ–±–µ—Å —Ä–∞–≤–Ω–æ {str(stat)} %\n'
			)
		else:
			if otkl > otkaz and sobes == 0:
				ignor = otkl - otkaz
				await message.answer(f'–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç–∫–ª–∏–∫–æ–≤ {str(otkl)} \n' \
				f'–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç–∫–∞–∑–æ–≤ {str(otkaz)} \n'
				f'–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–≥–Ω–æ—Ä–æ–≤ {str(ignor)} \n'
				f'–ñ–∞–ª—å —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–π –ø–æ–∫–∞ –Ω–µ—Ç!\n'
			)
			elif otkl == 0:
				await message.answer(text= "–ß—Ç–æ–±—ã –±—ã–ª–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞, –¥–∞–≤–∞–π –æ—Ç–∫–ª–∏–∫–∞—Ç—å—Å—è –Ω–∞ –≤–∞–∫–∞–Ω—Å–∏–∏ üôÇ")
			elif otkl == otkaz:
				await message.answer(f'–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç–∫–ª–∏–∫–æ–≤ {str(otkl)} \n' \
				f'–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç–∫–∞–∑–æ–≤ {str(otkaz)} \n'
				f'–ñ–∞–ª—å —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–π –ø–æ–∫–∞ –Ω–µ—Ç!\n'
			)
			else:
				await message.answer(text= "–û—Ç–∫–∞–∑–æ–≤ –±–æ–ª—å—à–µ —á–µ–º –æ—Ç–∫–ª–∏–∫–æ–≤? –ò–Ω—Ç–µ—Ä–µ—Å–Ω–æ üôÇ")

		# print (otkl)
		# print (sobes) 
		# stat == otkl * 0.01 * sobes
		# print (str(stat))
		
			
	elif message.text.startswith("üéâ"):
		if otkl > 0:
			await message.answer(f'–ï–±–æ–∏–∏–∏–∏–∏–∏, —Ç—ã –ø–æ–ª—É—á–∏–ª –û–§–§–ï–†!!! –ü–æ–∑–¥—Ä–∞–≤–ª—è—é!!! ü•≥ü•≥ü•≥ \n' \
				f'https://www.youtube.com/watch?v=Sagg08DrO5U&t=12s \n'
			) 
		else:
		 await message.answer(text= "–û—Ñ—Ñ–µ—Ä –±–µ–∑ –æ—Ç–∫–ª–∏–∫–æ–≤? –¢—ã –∏–ª–∏ —Å–µ–Ω—å–æ—Ä-–ø–æ–º–∏–¥–æ—Ä, –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—Å–µ —Ö–æ—Ç—è—Ç –≤–∏–¥–µ—Ç—å —É —Å–µ–±—è –≤ –∫–æ–º–∞–Ω–¥–µ, –∏–ª–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤—â–∏–∫, —á—Ç–æ —Ç—ã—á–µ—Ç –≤–µ–∑–¥–µ –ø–æ–¥—Ä—è–¥ üôÇ")

		
		# await bot.send_video(message.chat.id, 'https://media.giphy.com/media/TcdpZwYDPlWXC/giphy.gif')
		# audio = open('1.mp3', 'rb')
		
        # await bot.send_audio(message.from_user.id, audio=audio_file_id)

	elif message.text.startswith("/"):	
		await message.answer(f'–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}  \n' \
			f'–Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ –≤–µ—Å—Ç–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –æ—Ç–∫–ª–∏–∫–æ–≤, –æ—Ç–∫–∞–∑–æ–≤ –∏ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–π –ø—Ä–∏ —Ç—Ä—É–¥–æ—É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ. \n' \
			f'–ï—Å–ª–∏ –≤–¥—Ä—É–≥ —Ç–µ–±–µ –Ω—É–∂–Ω–æ –æ–±–Ω—É–ª–∏—Ç—å –≤—Å–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏ - –Ω–∞–ø–∏—à–∏ –º–Ω–µ "–û–±–Ω—É–ª–∏—Ç—å"\n' \
			f'–Ø –∂–µ–ª–∞—é —Ç–µ–±–µ –ø–æ—Å–∫–æ—Ä–µ –Ω–∞–π—Ç–∏ —Ä–∞–±–æ—Ç—É –∏ –Ω–µ —Ç—Ä–∞—Ç–∏—Ç—å –º–æ—ë –≤—Ä–µ–º—è –ø–æ–ø—É—Å—Ç—É!\n',
		reply_markup=main_kb)


	elif message.sticker:
		await message.answer_sticker(sticker=message.sticker.file_id) #–æ—Ç–≤–µ—Ç —Å—Ç–∏–∫–µ—Ä–æ–º –Ω–∞ —Å—Ç–∏–∫–µ—Ä
	else:
		await message.reply(text="–ü—Ä–æ—Å—Ç–∏, –Ω–æ1 —è –Ω–µ –ø–æ–Ω–∏–º–∞—é üòÖ")











async def main():
	logging.basicConfig(level=logging.INFO)
	await dp.start_polling(bot)

if __name__ == "__main__":
	asyncio.run(main())